- Projektabhängige Konfiguration in die DB, wie zum Beispiel SMTP
--- Config Driver -> DB (Fallback)

- Theme::view erweitern um before und after events, so sollte es möglich sein, vor und nach einem template daten einzufügen

- SuperClass in das SRIT Package

- Navigation nur einmal innitialisieren
--- neue Methode getNaviBaum($name)

- PHPDocs erweitern
- wir steigen im Model komplett auf getter Methoden um, das heißt es sind soll nicht mehr möglich sein folgendes zu tun
  $model->name, sondern nur noch $model->getName() resp. $model->get_name(), das hat den Vorteil, das in bestimmten Fällen
  wo die Daten vor dem ausgeben/zurückgeben noch mal geändert werden können.

- Dynamische HTML Elemente, wie Formelemente etc. werden in eigene Templates verpackt, so kann man Themeunabhängig, die Funktionen wie html_input_text verwenden.

- Cache Backend, es kann entschieden werden, welches Cache Backend (File, Memcached etc.) wir verwenden wollen.

- Email Texte übersetzen

- Assets können bis runter auf Controller - Action Ebene dynamisch hinzugefügt werden (JS Done)

- An die Validation Errors werden die Parameter des Validators gehängt

- fuel/app komplett abschaffen!

- module manage like oxid

- CRUD Funktionalität -> crud objects core